name: TEST using changed-files

on:
    workflow_call:
      inputs:
          environment:
            default: dev
            required: true
            type: string

# Pull vars from repo and assign to env vars
env:
  GOOGLE_PROJECT_ID: ${{ vars.GOOGLE_PROJECT_ID }}
  GOOGLE_COMPOSER_ENVIRONMENT: ${{ vars.GOOGLE_COMPOSER_ENVIRONMENT }}
  GOOGLE_SERVICE_ACCOUNT: ${{ vars.GOOGLE_SERVICE_ACCOUNT }}
  GOOGLE_WORKLOAD_IDENTITY_PROVIDER: ${{ vars.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}

jobs:
  deploy:
    name: TEST using changed-files
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:

      #############
      ### setup ###
      #############

      # Checkout repo, this needs to happen first
      - name: Checkout
        uses: actions/checkout@v3

      # Keyless Auth!
      - id: 'auth'
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ env.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GOOGLE_SERVICE_ACCOUNT }}

      # Set up gcloud pointing to our airbyte-prod project
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v0'
        with:
          project_id: ${{ env.GOOGLE_PROJECT_ID }}

      ##########################
      ### deploy dbt changes ###
      ##########################

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          include_all_old_new_renamed_files: "true"
        
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        # with:
        #   since_last_remote_commit: true 

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
            echo "$file was changed or modified"
          done
          for file in ${{ steps.changed-files.outputs.all_old_new_renamed_files }}; do
            EXPORT old_name="$file" | cut -d ',' -f 1
            EXPORT new_name="$file" | cut -d ',' -f 2
            echo "$old_name was renamed to $new_name"
          done
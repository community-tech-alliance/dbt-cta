
{{ config(
    cluster_by = "_airbyte_extracted_at",
    partition_by = {"field": "_airbyte_extracted_at", "data_type": "timestamp", "granularity": "day"},
    unique_key = '_airbyte_raw_id'
) }}
-- SQL model to build a hash column based on the values of this record
-- depends_on: {{ source('cta', 'campaigns') }}

select
   _airbyte_raw_id,
   _airbyte_extracted_at,
   _airbyte_meta,
   _airbyte_generation_id,
   id,
   name,
   type,
   appId,
   appName,
   subType,
   subject,
   counters,
   contentId,
   numQueued,
   numIncluded,
   counters_open,
   counters_sent,
   counters_click,
   counters_print,
   counters_reply,
   counters_bounce,
   lastUpdatedTime,
   processingState,
   counters_dropped,
   counters_forward,
   counters_deferred,
   counters_delivered,
   counters_processed,
   counters_spamreport,
   counters_suppressed,
   counters_mta_dropped,
   counters_statuschange,
   counters_unsubscribed,
   lastProcessingStartedAt,
   lastProcessingFinishedAt,
   lastProcessingStateChangeAt,
   {{ dbt_utils.surrogate_key([
     'id',
    'name',
    'type',
    'appId',
    'appName',
    'subType',
    'subject',
    'contentId',
    'numQueued',
    'numIncluded',
    'counters_open',
    'counters_sent',
    'counters_click',
    'counters_print',
    'counters_reply',
    'counters_bounce',
    'lastUpdatedTime',
    'processingState',
    'counters_dropped',
    'counters_forward',
    'counters_deferred',
    'counters_delivered',
    'counters_processed',
    'counters_spamreport',
    'counters_suppressed',
    'counters_mta_dropped',
    'counters_statuschange',
    'counters_unsubscribed',
    'lastProcessingStartedAt',
    'lastProcessingFinishedAt',
    'lastProcessingStateChangeAt'
    ]) }} as _airbyte_campaigns_hashid
from {{ source('cta', 'campaigns') }}
-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type
-- depends_on: {{ source('cta','_raw_payroll') }}

select
    -- casting existing fields to datatypes
    cast(Company_Code as {{ dbt_utils.type_string() }}) as Company_Code,
    cast(Payroll_Name as {{ dbt_utils.type_string() }}) as Payroll_Name,
    cast(File_Number as {{ dbt_utils.type_bigint() }}) as File_Number,
    cast(Associate_ID as {{ dbt_utils.type_string() }}) as Associate_ID,
    PARSE_DATE('%m/%d/%Y', Pay_Date) as Pay_Date,
    cast(Job_Title_Description as {{ dbt_utils.type_string() }}) as Job_Title_Description,
    cast(Home_Department_Code as {{ dbt_utils.type_string() }}) as Home_Department_Code,
    cast(Home_Department_Description as {{ dbt_utils.type_string() }}) as Home_Department_Description,
    cast(Worked_In_Department as {{ dbt_utils.type_string() }}) as Worked_In_Department,
    cast(Worked_In_Department_Description as {{ dbt_utils.type_string() }}) as Worked_In_Department_Description,
    cast(Distribution_Number as {{ dbt_utils.type_bigint() }}) as Distribution_Number,
    cast(REGEXP_REPLACE(REPLACE(`Gross_Pay`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Gross_Pay_USD`,
    cast(REGEXP_REPLACE(REPLACE(`Net_Pay`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Net_Pay_USD`,
    cast(REGEXP_REPLACE(REPLACE(`Take_Home`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Take_Home_USD`,
    cast(Regular_Hours_Total as {{ dbt_utils.type_float() }}) as Regular_Hours_Total,
    cast(Overtime_Hours_Total as {{ dbt_utils.type_float() }}) as Overtime_Hours_Total,
    cast(Additional_Hours___HOL as {{ dbt_utils.type_float() }}) as Additional_Hours___HOL,
    cast(Additional_Hours___SIK as {{ dbt_utils.type_float() }}) as Additional_Hours___SIK,
    cast(Additional_Hours___PTO as {{ dbt_utils.type_float() }}) as Additional_Hours___PTO,
    cast(Additional_Hours___COV as {{ dbt_utils.type_float() }}) as Additional_Hours___COV,
    cast(Total_Hours as {{ dbt_utils.type_float() }}) as Total_Hours,
    CAST(REGEXP_REPLACE(REPLACE(`Regular_Earnings_Total`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Regular_Earnings_Total_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Overtime_Earnings_Total`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Overtime_Earnings_Total_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Additional_Earnings___HOL`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Additional_Earnings___HOL_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`SIK___SICK_LEAVE_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `SIK___SICK_LEAVE_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`PTO_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `PTO_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Additional_Earnings___COV`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Additional_Earnings___COV_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`1FA___FF_FMLA_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `1FA___FF_FMLA_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`1FE___FF_PSL_EE_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `1FE___FF_PSL_EE_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`1FF___FF_PSL_FAM_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `1FF___FF_PSL_FAM_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`BN___BONUS_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `BN___BONUS_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`DEV___Phone_Bonus_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `DEV___Phone_Bonus_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`DIB___DRIVER_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `DIB___DRIVER_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`PER___PERSONAL_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `PER___PERSONAL_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`PPE___PRPD_Earnings_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `PPE___PRPD_Earnings_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`RF1___REFERRAL_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `RF1___REFERRAL_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`UPT___UNPAID_TIME_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `UPT___UNPAID_TIME_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`VAC___VACATION_Earnings`, ',', ''), r'[$\s]', '') AS FLOAT64) as `VAC___VACATION_Earnings_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Total_Deductions`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Total_Deductions_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Family_Leave_Insurance___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Family_Leave_Insurance___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Federal_Income___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Federal_Income___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Lived_In_Local___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Lived_In_Local___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Lived_In_State___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Lived_In_State___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Local_4___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Local_4___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Local_5___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Local_5___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Medical_Leave_Insurance___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Medical_Leave_Insurance___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Medicare___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Medicare___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Medicare_Adjust___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Medicare_Adjust___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Medicare_Surtax_Adjust___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Medicare_Surtax_Adjust___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`School_District___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `School_District___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`SDI___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `SDI___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Social_Security___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Social_Security___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`SUI___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `SUI___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`SUI_SDI___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `SUI_SDI___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Transit___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Transit___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Worked_In_Local___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Worked_In_Local___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Worked_In_State___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Worked_In_State___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Workers_Comp_Assessment___Employee_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Workers_Comp_Assessment___Employee_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Family_Leave_Insurance___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Family_Leave_Insurance___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`FUTA___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `FUTA___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Lived_in_Local___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Lived_in_Local___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Lived_in_State___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Lived_in_State___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Local_4___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Local_4___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Local_5___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Local_5___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Medical_Leave_Insurance___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Medical_Leave_Insurance___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Medicare___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Medicare___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`MTA___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `MTA___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`School_District___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `School_District___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`SDI___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `SDI___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Social_Security___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Social_Security___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`SUI___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `SUI___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`SUI_SDI___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `SUI_SDI___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Transit___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Transit___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Worked_in_Local___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Worked_in_Local___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Worked_in_State___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Worked_in_State___Employer_Tax_USD`,
    CAST(REGEXP_REPLACE(REPLACE(`Workers_Comp_Assessment___Employer_Tax`, ',', ''), r'[$\s]', '') AS FLOAT64) as `Workers_Comp_Assessment___Employer_Tax_USD`,
    cast(Void_Check_Indicator as {{ dbt_utils.type_string() }}) as Void_Check_Indicator,
    cast(Check_Voucher_Code as {{ dbt_utils.type_string() }}) as Check_Voucher_Code,
    cast(Check_Voucher_Number as {{ dbt_utils.type_bigint() }}) as Check_Voucher_Number,
    
    -- new fields
    {{ dbt_utils.surrogate_key([
        'Company_Code',
        'Payroll_Name',
        'File_Number',
        'Associate_ID',
        'Pay_Date',
        'Job_Title_Description',
        'Home_Department_Code',
        'Home_Department_Description',
        'Worked_In_Department',
        'Worked_In_Department_Description',
        'Distribution_Number',
        'Void_Check_Indicator',
        'Check_Voucher_Code',
        'Check_Voucher_Number',
    ]) }} as _payroll_hashid,
    {{ current_timestamp() }} as _cta_loaded_at

from {{ source('cta','_raw_payroll') }}
-- activities
where 1 = 1


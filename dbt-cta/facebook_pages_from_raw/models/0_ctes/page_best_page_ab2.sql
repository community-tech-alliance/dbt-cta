{{ config(
    cluster_by = "_airbyte_extracted_at",
    partition_by = {"field": "_airbyte_extracted_at", "data_type": "timestamp", "granularity": "day"},
    tags = [ "nested-intermediate" ]
) }}
-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type
-- depends_on: {{ ref('page_best_page_ab1') }}
select
    _airbyte_page_hashid,
    cast(studio as {{ dbt_utils.type_string() }}) as studio,
    food_styles,
    cast(name_with_location_descriptor as {{ dbt_utils.type_string() }}) as name_with_location_descriptor,
    cast(attire as {{ dbt_utils.type_string() }}) as attire,
    {{ cast_to_boolean('is_published') }} as is_published,
    cast(about as {{ dbt_utils.type_string() }}) as about,
    cast(bio as {{ dbt_utils.type_string() }}) as bio,
    {{ cast_to_boolean('has_whatsapp_number') }} as has_whatsapp_number,
    cast(displayed_message_response_time as {{ dbt_utils.type_string() }}) as displayed_message_response_time,
    {{ cast_to_boolean('is_permanently_closed') }} as is_permanently_closed,
    cast(public_transit as {{ dbt_utils.type_string() }}) as public_transit,
    cast(culinary_team as {{ dbt_utils.type_string() }}) as culinary_team,
    {{ cast_to_boolean('is_messenger_bot_get_started_enabled') }} as is_messenger_bot_get_started_enabled,
    copyright_whitelisted_ig_partners,
    cast(season as {{ dbt_utils.type_string() }}) as season,
    cast(store_location_descriptor as {{ dbt_utils.type_string() }}) as store_location_descriptor,
    cast(id as {{ dbt_utils.type_string() }}) as id,
    cast(app_id as {{ dbt_utils.type_string() }}) as app_id,
    {{ cast_to_boolean('is_community_page') }} as is_community_page,
    cast(band_members as {{ dbt_utils.type_string() }}) as band_members,
    cast(mpg as {{ dbt_utils.type_string() }}) as mpg,
    {{ cast_to_boolean('offer_eligible') }} as offer_eligible,
    cast(global_brand_page_name as {{ dbt_utils.type_string() }}) as global_brand_page_name,
    cast(access_token as {{ dbt_utils.type_string() }}) as access_token,
    cast(mission as {{ dbt_utils.type_string() }}) as mission,
    cast(phone as {{ dbt_utils.type_string() }}) as phone,
    cast(release_date as {{ dbt_utils.type_string() }}) as release_date,
    cast(instant_articles_review_status as {{ dbt_utils.type_string() }}) as instant_articles_review_status,
    cast(global_brand_root_id as {{ dbt_utils.type_string() }}) as global_brand_root_id,
    cast(store_number as {{ dbt_utils.type_bigint() }}) as store_number,
    cast(country_page_likes as {{ dbt_utils.type_bigint() }}) as country_page_likes,
    cast(description_html as {{ dbt_utils.type_string() }}) as description_html,
    cast({{ empty_string_to_null('leadgen_tos_acceptance_time') }} as {{ type_timestamp_with_timezone() }}) as leadgen_tos_acceptance_time,
    cast(plot_outline as {{ dbt_utils.type_string() }}) as plot_outline,
    cast(products as {{ dbt_utils.type_string() }}) as products,
    cast(new_like_count as {{ dbt_utils.type_bigint() }}) as new_like_count,
    {{ cast_to_boolean('promotion_eligible') }} as promotion_eligible,
    messenger_ads_default_quick_replies,
    cast(place_type as {{ dbt_utils.type_string() }}) as place_type,
    cast(genre as {{ dbt_utils.type_string() }}) as genre,
    cast(general_manager as {{ dbt_utils.type_string() }}) as general_manager,
    cast(record_label as {{ dbt_utils.type_string() }}) as record_label,
    cast(store_code as {{ dbt_utils.type_string() }}) as store_code,
    cast(website as {{ dbt_utils.type_string() }}) as website,
    {{ cast_to_boolean('supports_donate_button_in_live_video') }} as supports_donate_button_in_live_video,
    cast(differently_open_offerings as {{ dbt_utils.type_string() }}) as differently_open_offerings,
    cast(business as {{ dbt_utils.type_string() }}) as business,
    cast(founded as {{ dbt_utils.type_string() }}) as founded,
    {{ cast_to_boolean('is_owned') }} as is_owned,
    cast(privacy_info_url as {{ dbt_utils.type_string() }}) as privacy_info_url,
    {{ cast_to_boolean('is_verified') }} as is_verified,
    cast(company_overview as {{ dbt_utils.type_string() }}) as company_overview,
    cast(unread_message_count as {{ dbt_utils.type_bigint() }}) as unread_message_count,
    cast(single_line_address as {{ dbt_utils.type_string() }}) as single_line_address,
    cast(artists_we_like as {{ dbt_utils.type_string() }}) as artists_we_like,
    cast(promotion_ineligible_reason as {{ dbt_utils.type_string() }}) as promotion_ineligible_reason,
    cast(page_token as {{ dbt_utils.type_string() }}) as page_token,
    cast(checkins as {{ dbt_utils.type_bigint() }}) as checkins,
    pickup_options,
    cast(written_by as {{ dbt_utils.type_string() }}) as written_by,
    cast(keywords as {{ dbt_utils.type_string() }}) as keywords,
    cast(overall_star_rating as {{ dbt_utils.type_float() }}) as overall_star_rating,
    cast(price_range as {{ dbt_utils.type_string() }}) as price_range,
    cast(pharma_safety_info as {{ dbt_utils.type_string() }}) as pharma_safety_info,
    cast(impressum as {{ dbt_utils.type_string() }}) as impressum,
    cast(press_contact as {{ dbt_utils.type_string() }}) as press_contact,
    cast(features as {{ dbt_utils.type_string() }}) as features,
    cast(band_interests as {{ dbt_utils.type_string() }}) as band_interests,
    {{ cast_to_boolean('has_whatsapp_business_number') }} as has_whatsapp_business_number,
    cast(affiliation as {{ dbt_utils.type_string() }}) as affiliation,
    cast(members as {{ dbt_utils.type_string() }}) as members,
    {{ cast_to_boolean('has_added_app') }} as has_added_app,
    cast(whatsapp_number as {{ dbt_utils.type_string() }}) as whatsapp_number,
    cast(current_location as {{ dbt_utils.type_string() }}) as current_location,
    cast(personal_interests as {{ dbt_utils.type_string() }}) as personal_interests,
    cast(fan_count as {{ dbt_utils.type_bigint() }}) as fan_count,
    cast(talking_about_count as {{ dbt_utils.type_bigint() }}) as talking_about_count,
    cast(merchant_review_status as {{ dbt_utils.type_string() }}) as merchant_review_status,
    cast(rating_count as {{ dbt_utils.type_bigint() }}) as rating_count,
    {{ cast_to_boolean('is_messenger_platform_bot') }} as is_messenger_platform_bot,
    cast(name as {{ dbt_utils.type_string() }}) as name,
    cast(produced_by as {{ dbt_utils.type_string() }}) as produced_by,
    {{ cast_to_boolean('is_webhooks_subscribed') }} as is_webhooks_subscribed,
    cast(booking_agent as {{ dbt_utils.type_string() }}) as booking_agent,
    cast(birthday as {{ dbt_utils.type_string() }}) as birthday,
    {{ cast_to_boolean('has_transitioned_to_new_page_experience') }} as has_transitioned_to_new_page_experience,
    {{ cast_to_boolean('can_checkin') }} as can_checkin,
    cast(link as {{ dbt_utils.type_string() }}) as link,
    cast(description as {{ dbt_utils.type_string() }}) as description,
    cast(merchant_id as {{ dbt_utils.type_string() }}) as merchant_id,
    cast(verification_status as {{ dbt_utils.type_string() }}) as verification_status,
    cast(network as {{ dbt_utils.type_string() }}) as network,
    emails,
    cast(directed_by as {{ dbt_utils.type_string() }}) as directed_by,
    cast(personal_info as {{ dbt_utils.type_string() }}) as personal_info,
    {{ cast_to_boolean('supports_instant_articles') }} as supports_instant_articles,
    cast(influences as {{ dbt_utils.type_string() }}) as influences,
    cast(display_subtext as {{ dbt_utils.type_string() }}) as display_subtext,
    cast(general_info as {{ dbt_utils.type_string() }}) as general_info,
    {{ cast_to_boolean('can_post') }} as can_post,
    cast(hours as {{ dbt_utils.type_string() }}) as hours,
    cast(hometown as {{ dbt_utils.type_string() }}) as hometown,
    cast(temporary_status as {{ dbt_utils.type_string() }}) as temporary_status,
    cast(screenplay_by as {{ dbt_utils.type_string() }}) as screenplay_by,
    {{ cast_to_boolean('is_chain') }} as is_chain,
    cast(built as {{ dbt_utils.type_string() }}) as built,
    {{ cast_to_boolean('is_always_open') }} as is_always_open,
    delivery_and_pickup_option_info,
    cast(messenger_ads_quick_replies_type as {{ dbt_utils.type_string() }}) as messenger_ads_quick_replies_type,
    {{ cast_to_boolean('is_eligible_for_branded_content') }} as is_eligible_for_branded_content,
    cast(schedule as {{ dbt_utils.type_string() }}) as schedule,
    {{ cast_to_boolean('is_unclaimed') }} as is_unclaimed,
    cast(awards as {{ dbt_utils.type_string() }}) as awards,
    cast(followers_count as {{ dbt_utils.type_bigint() }}) as followers_count,
    cast(recipient as {{ dbt_utils.type_string() }}) as recipient,
    cast(starring as {{ dbt_utils.type_string() }}) as starring,
    messenger_ads_default_icebreakers,
    cast(unseen_message_count as {{ dbt_utils.type_bigint() }}) as unseen_message_count,
    cast(category as {{ dbt_utils.type_string() }}) as category,
    cast(unread_notif_count as {{ dbt_utils.type_bigint() }}) as unread_notif_count,
    {{ cast_to_boolean('leadgen_tos_accepted') }} as leadgen_tos_accepted,
    cast(username as {{ dbt_utils.type_string() }}) as username,
    cast(were_here_count as {{ dbt_utils.type_bigint() }}) as were_here_count,
    _airbyte_raw_id,
    _airbyte_extracted_at,
    {{ current_timestamp() }} as _airbyte_normalized_at
from {{ ref('page_best_page_ab1') }}
-- best_page at page/best_page
where 1 = 1


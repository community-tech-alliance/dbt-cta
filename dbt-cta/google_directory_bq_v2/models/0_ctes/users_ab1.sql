
{{ config(
    cluster_by = "_airbyte_extracted_at",
    partition_by = {"field": "_airbyte_extracted_at", "data_type": "timestamp", "granularity": "day"},
    unique_key = '_airbyte_raw_id'
) }}
-- SQL model to build a hash column based on the values of this record
-- depends_on: {{ source('cta', 'users') }}

select
   _airbyte_raw_id,
   _airbyte_extracted_at,
   _airbyte_meta,
   id,
   etag,
   kind,
   name,
   emails,
   gender,
   phones,
   aliases,
   isAdmin,
   archived,
   username,
   addresses,
   languages,
   locations,
   relations,
   suspended,
   customerId,
   externalIds,
   orgUnitPath,
   creationTime,
   hashFunction,
   primaryEmail,
   agreedToTerms,
   ipWhitelisted,
   lastLoginTime,
   organizations,
   posixAccounts,
   recoveryEmail,
   recoveryPhone,
   sshPublicKeys,
   isMailboxSetup,
   isEnforcedIn2Sv,
   isEnrolledIn2Sv,
   isDelegatedAdmin,
   suspensionReason,
   thumbnailPhotoUrl,
   nonEditableAliases,
   thumbnailPhotoEtag,
   changePasswordAtNextLogin,
   includeInGlobalAddressList,
   {{ dbt_utils.surrogate_key([
     'id',
    'etag',
    'kind',
    'isAdmin',
    'archived',
    'username',
    'suspended',
    'customerId',
    'orgUnitPath',
    'creationTime',
    'hashFunction',
    'primaryEmail',
    'agreedToTerms',
    'ipWhitelisted',
    'lastLoginTime',
    'recoveryEmail',
    'recoveryPhone',
    'isMailboxSetup',
    'isEnforcedIn2Sv',
    'isEnrolledIn2Sv',
    'isDelegatedAdmin',
    'suspensionReason',
    'thumbnailPhotoUrl',
    'thumbnailPhotoEtag',
    'changePasswordAtNextLogin',
    'includeInGlobalAddressList'
    ]) }} as _airbyte_users_hashid
from {{ source('cta', 'users') }}